<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>Some common git usage
---------------------

To ignore certain files:
$ echo &quot;log/*.log&quot; &gt;&gt; .gitignore
$ echo &quot;tmp/**/*&quot; &gt;&gt; .gitignore
$ git add .
$ git commit -m &quot;Add files&quot;

To add .gitignore files to all empty directories recursively from your current directory:
$find . \( -type d -empty \) -and \( -not -regex ./\.git.* \) -exec touch {}/.gitignore \;


To create a public repository:
$ mkdir someapp.git
$ cd someapp.git
$ git --bare init
$ git-update-server-info

Add public repository as a remote:
$ git remote add origin ssh://myserver.com/var/git/myapp.git
$ git push

Track the Remote Branch
[branch &quot;master&quot;]
	remote = origin
	merge = refs/heads/master

To pull from someone else's repository:
# # Create a local branch
$ git checkout some_working_branch
# # Add the person's repository as a remote
$ git remote add foos_remote git://someurl/
# # Fetch her branch into yours
$ git checkout -b foos_remote/her_branch
# # Pull the changes into your local branch
$ git pull foos_remote her_branch

Submodule support:
$ git submodule add [git-url] [path to local project dir]
$ git submodule init
# thereafter
$ git submodule update</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>