<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>Command Line Options:
-A Print frame payload in ASCII
-c &lt;count&gt; Exit after capturing count packets
-D List available interfaces
-e Print link-level headers
-F &lt;file&gt; Use file as the filter expression
-G &lt;n&gt; Rotate the dump file every n seconds
-i &lt;iface&gt; Specifies the capture interface
-K Don't verify TCP checksums
-L List data link types for the interface
-n Don't convert addresses to names
-p Don't capture in promiscuous mode
-q Quick output
-r &lt;file&gt; Read packets from file
-s &lt;len&gt; Capture up to len bytes per packet
-S Print absolute TCP sequence numbers
-t Don't print timestamps
-v[v[v]] Print more verbose output
-w &lt;file&gt; Write captured packets to file
-x Print frame payload in hex
-X Print frame payload in hex and ASCII
-y &lt;type&gt; Specify the data link type
-Z &lt;user&gt; Drop privileges from root to user

Filters:
[src|dst] host &lt;host&gt; Matches a host as the IP source, destination, or either
ether [src|dst] host &lt;ehost&gt; Matches a host as the Ethernet source, destination, or either
gateway host &lt;host&gt; Matches packets which used host as a gateway
[src|dst] net &lt;network&gt;/&lt;len&gt; Matches packets to or from an endpoint residing in network
[tcp|udp] [src|dst] port &lt;port&gt; Matches TCP or UDP packets sent to/from port
[tcp|udp] [src|dst] portrange &lt;p1&gt;-&lt;p2&gt; Matches TCP or UDP packets to/from a port in the given range
less &lt;length&gt; Matches packets less than or equal to length
greater &lt;length&gt; Matches packets greater than or equal to length
(ether|ip|ip6) proto &lt;protocol&gt; Matches an Ethernet, IPv4, or IPv6 protocol
(ether|ip) broadcast Matches Ethernet or IPv4 broadcasts
(ether|ip|ip6) multicast Matches Ethernet, IPv4, or IPv6 multicasts
type (mgt|ctl|data) [subtype &lt;subtype&gt;] Matches 802.11 frames based on type and optional subtype
vlan [&lt;vlan&gt;] Matches 802.1Q frames, optionally with a VLAN ID of vlan
mpls [&lt;label&gt;] Matches MPLS packets, optionally with a label of label
&lt;expr&gt; &lt;relop&gt; &lt;expr&gt; Matches packets by an arbitrary expression

Modifiers:
! not
&amp;&amp; and
|| or

Protocols:
arp ether fddi icmp ip
ip6 link ppp radio rarp
slip tcp tr udp wlan

TCP Flags:
tcp-urg tcp-rst
tcp-ack tcp-syn
tcp-psh tcp-fin

ICMP Types:
icmp-echoreply icmp-routeradvert icmp-tstampreply
icmp-unreach icmp-routersolicit icmp-ireq
icmp-sourcequench icmp-timxceed icmp-ireqreply
icmp-redirect icmp-paramprob icmp-maskreq
icmp-echo icmp-tstamp icmp-maskreply

Examples:
udp dst port not 53 - UDP not bound for port 53
host 10.0.0.1 &amp;&amp; host 10.0.0.2 - Traffic between these hosts
tcp dst port 80 or 8080 - Packets to either TCP port

Useful options:
-i any: when you don't know what interface the traffic will be on or you're too lazy to find out
-i lo: show traffic on loopback
-s 10000 -w &lt;file&gt;: save all the traffic to a file
-r &lt;file&gt;: read from the file saved with -w
-X: show the payload in ascii
-n: useful when you're tcpdumping all the traffic and you don't want it to stop for ip-&gt;hostname lookups, and/or you don't want the lookup traffic in your dump
[and] not port 22: don't show ssh traffic, which is probably from your own ssh session</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>