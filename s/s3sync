<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>S3SYNC
------

s3sync.rb [options] &lt;source&gt; &lt;destination&gt;              version 1.1.4
  --help    -h          --verbose     -v     --dryrun    -n
  --ssl     -s          --recursive   -r     --delete
  --public-read -p      --expires=&quot;&lt;exp&gt;&quot;    --cache-control=&quot;&lt;cc&gt;&quot;
  --exclude=&quot;&lt;regexp&gt;&quot;  --progress           --debug   -d           
One of &lt;source&gt; or &lt;destination&gt; must be of S3 format, the other a local path.

Examples: (using S3 bucket 'bucket' and prefix 'pre')
  Put the local etc directory itself into S3
        s3sync.rb  -r  /etc  bucket:pre
        (This will yield S3 keys named  pre/etc/...)
  Put the contents of the local /etc dir into S3, rename dir:
        s3sync.rb  -r  /etc/  bucket:pre/etcbackup
        (This will yield S3 keys named  pre/etcbackup/...)
  Put contents of S3 &quot;directory&quot; etc into local dir
        s3sync.rb  -r  bucket:pre/etc/  /root/etcrestore
        (This will yield local files at  /root/etcrestore/...)
  Put the contents of S3 &quot;directory&quot; etc into a local dir named etc
        s3sync.rb  -r  bucket:pre/etc  /root
        (This will yield local files at  /root/etc/...)


S3CMD
-----

s3cmd.rb [options] &lt;command&gt; [arg(s)]           version 1.0.0
  --help    -h        --verbose     -v     --dryrun    -n
  --ssl     -s        --debug       -d

Commands:
s3cmd.rb  listbuckets  [headers]
s3cmd.rb  createbucket|deletebucket  &lt;bucket&gt;  [headers]
s3cmd.rb  list  &lt;bucket&gt;[:prefix]  [max/page]  [delimiter]  [headers]
s3cmd.rb  delete  &lt;bucket&gt;:key  [headers]
s3cmd.rb  deleteall  &lt;bucket&gt;[:prefix]  [headers]
s3cmd.rb  get|put  &lt;bucket&gt;:key  &lt;file&gt;  [headers]

Examples
--------
List all the buckets your account owns:
	s3cmd.rb listbuckets

Create a new bucket:
	s3cmd.rb createbucket BucketName

Delete an old bucket you don't want any more:
	s3cmd.rb deletebucket BucketName
	
Find out what's in a bucket, 10 lines at a time:
	s3cmd.rb list BucketName 10
	
Only look in a particular prefix:
	s3cmd.rb list BucketName:startsWithThis
	
Look in the virtual &quot;directory&quot; named foo;
lists sub-&quot;directories&quot; and keys that are at this level.
Note that if you specify a delimiter you must specify a max before it.
(until I make the options parsing smarter)
	s3cmd.rb list BucketName:foo/  10  /

Delete a key:
	s3cmd.rb delete BucketName:AKey

Delete all keys that match (like a combo between list and delete):
	s3cmd.rb deleteall BucketName:SomePrefix
	
Only pretend you're going to delete all keys that match, but list them: 
	s3cmd.rb  --dryrun  deleteall  BucketName:SomePrefix
	
Delete all keys in a bucket (leaving the bucket):
	s3cmd.rb deleteall BucketName
	
Get a file from S3 and store it to a local file
	s3cmd.rb get BucketName:TheFileOnS3.txt  ALocalFile.txt
	
Put a local file up to S3 
Note we don't automatically set mime type, etc.
NOTE that the order of the options doesn't change. S3 stays first!
	s3cmd.rb put BucketName:TheFileOnS3.txt ALocalFile.txt</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>