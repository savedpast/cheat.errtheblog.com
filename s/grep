<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>Overview
========
grep searches for lines matching a pattern.

$ grep [OPTION]... PATTERN [FILE] ...

PATTERN can be a normal string or a regular expression. For more on regular expressions see:
$ cheat regexp

Get full help:
$ grep --help

Basic Usage
===========
$ grep index *.rb
admin_controller.rb:  def index
store_controller.rb:  def index
store_controller.rb:    redirect_to_index 'Invalid product'
store_controller.rb:      redirect_to_index &quot;Your cart is currently empty.&quot;


Useful Options
==============
-h:   suppress file names in output
-w:   restrict search to whole words only
-c:   displays count of matching lines in each file, not the lines themselves
      (note this is not the same as $ grep index *.rb | wc -l)
-i:   ignore case
-l:   list only file names containing matching lines
-n:   precede each line with the line number where it was found
-v:   display all lines NOT matching pattern
-C:   Display NUM lines of context either side of matches
-B:   Display NUM lines of context Before the matches
-A:   Display NUM lines of context After the matches

-e pattern: 
      Search for a pattern. Can use multiple times on a line
-r:   Search recursively from the current or specificed directory
  --include=pattern:
      Only search in file names matching pattern
  --exclude=pattern:
      Do not search in file names matching pattern

Examples
========

Recursive search, multiple patterns:

$ grep -r --include=*.rb -e &quot;TagsHelper&quot; -e &quot;tags_helper&quot; .
./app/models/foo.rb:  include TagsHelper
./app/models/bar.rb:  include TagsHelper
./vendor/plugins/acts_as_taggable_on_steroids/lib/tags_helper.rb:module TagsHelper
./vendor/plugins/acts_as_taggable_on_steroids/test/abstract_unit.rb:require_dependency File.dirname(__FILE__) + '/../lib/tags_helper'
./vendor/plugins/acts_as_taggable_on_steroids/test/tags_helper_test.rb:class TagsHelperTest &lt; Test::Unit::TestCase
./vendor/plugins/acts_as_taggable_on_steroids/test/tags_helper_test.rb:  include TagsHelper

# Count the number of functions in all JS files
grep -c function *.js

# Print lines that DO NOT have &quot;function&quot;
grep -v function *.js

# List processes that match &quot;pidgin&quot; (non-Windows)
# Use [] around the first letter to omit the 'grep' process.
ps -ef | grep [p]idgin

# Print a list of: function &lt;function-name&gt; and sort it
grep -Eho &quot;^\s*function \w+&quot; *.js | sort

# Print filenames, line #s, and lines that start with &quot;(white space)function&quot;
grep -EHn &quot;^\s*(function \w+|\w+ \= function)&quot; *.js

# Print only duplicate function names
grep -hEo &quot;^\s*function \w+&quot; *.js | sort | uniq -d</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>