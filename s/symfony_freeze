<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>Deploying Symfony 1.4 project

In your config/ProjectConfiguration.class.php change the require_once statement for sfCoreAutoload class. Make it search for symfony in lib/vendor/symfony:

require_once dirname(__FILE__) . '/../lib/vendor/symfony/lib/autoload/sfCoreAutoload.class.php';

Now you can do two things:

    * Copy whole symfony lib into lib/vendor/symfony dir. This way you always have symfony with your project. Drawback is you have to copy it while sending files to the server.
    * Create lib/vendor/symfony symbolic link pointing to your symfony lib. Advantage is you don't have to copy whole framework all the time. Drawback is you still have to put symfony in the same location on dev and production servers. However, symbolic link might be relative to the project (i.e. one level up).










                                             dp &lt;dot&gt; patel &lt;at&gt; gmail &lt;dot&gt; com
                                                         Deven Patel
</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>