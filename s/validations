<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>Basic Validations
http://ar.rubyonrails.com/classes/ActiveRecord/Validations/ClassMethods.html

def validate
  unless name &amp;&amp; name =~ /^\w+$/
    errors.add(:name, &quot;is missing or invalid&quot;)
  end
end

def validate_on_create
  if User.find_by_name(name)
    errors.add(:name, &quot;is already being used&quot;)
  end
end


validates_acceptance_of
  Validates that the value of the attribute is the string &quot;1&quot; or the value of the :accept parameter. Useful for checkboxes.
validates_associated
validates_confirmation_of
validates_each
validates_exclusion_of
validates_format_of
validates_inclusion_of
validates_length_of
validates_numericality_of
validates_presence_of
validates_size_of
validates_uniqueness_of

DEFAULT_VALIDATION_OPTIONS = { :on =&gt; :save, :allow_nil =&gt; false, :allow_blank =&gt; false, :message =&gt; nil
ALL_RANGE_OPTIONS = [ :is, :within, :in, :minimum, :maximum ].freeze
ALL_NUMERICALITY_CHECK = { :greater_than =&gt; '&gt;', :greater_than_or_equal_to =&gt; '&gt;=', :equal_to =&gt; '==', :less_than =&gt; '&lt;', :less_than_or_equal_to =&gt; '&lt;=', :odd =&gt; 'odd?', :even =&gt; 'even?' }.freeze


validates_length_of :first_name, :maximum=&gt;30
validates_length_of :last_name, :maximum=&gt;30, :message=&gt;&quot;less than {{count}} if you don't mind&quot;
validates_length_of :fax, :in =&gt; 7..32, :allow_nil =&gt; true
validates_length_of :phone, :in =&gt; 7..32, :allow_blank =&gt; true
validates_length_of :user_name, :within =&gt; 6..20, :too_long =&gt; &quot;pick a shorter name&quot;, :too_short =&gt; &quot;pick a longer name&quot;
validates_length_of :fav_bra_size, :minimum =&gt; 1, :too_short =&gt; &quot;please enter at least {{count}} character&quot;
validates_length_of :smurf_leader, :is =&gt; 4, :message =&gt; &quot;papa is spelled with {{count}} characters... don't play me.&quot;
validates_length_of :essay, :minimum =&gt; 100, :too_short =&gt; &quot;Your essay must be at least {{count}} words.&quot;), :tokenizer =&gt; lambda {|str| str.scan(/\w+/) }</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>