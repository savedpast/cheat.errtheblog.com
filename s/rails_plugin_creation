<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>require 'active_record'

module Foo
  module Acts #:nodoc:
    module Fox #:nodoc:

      def self.included(mod)
        mod.extend(ClassMethods)
      end

      # declare the class level helper methods which
      # will load the relevant instance methods
      # defined below when invoked
      module ClassMethods
        def acts_as_fox
          class_eval do
            extend Foo::Acts::Fox::SingletonMethods
          end
          include Foo::Acts::Fox::InstanceMethods
        end
      end

      # Adds a catch_chickens class method which finds
      # all records which have a 'chickens' field set
      # to true.
      module SingletonMethods
        def catch_chickens
          find(:all, :conditions =&gt; ['chickens = ?', true])
        end
        # etc...
      end

      # Adds instance methods.
      module InstanceMethods
        def eat_chicken
          puts &quot;Fox with ID #{self.id} just ate a chicken&quot; 
        end
      end

    end
  end
end

# reopen ActiveRecord and include all the above to make
# them available to all our models if they want it

ActiveRecord::Base.class_eval do
  include Foo::Acts::Fox
end</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>