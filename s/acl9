<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>ROLE MODEL

  class Role &lt; ActiveRecord::Base
    acts_as_authorization_role
  end

  create_table &quot;roles&quot;, :force =&gt; true do |t|
    t.string   :name,              :limit =&gt; 40
    t.string   :authorizable_type, :limit =&gt; 40
    t.integer  :authorizable_id
    t.timestamps
  end

THE SUBJECT

  class User &lt;&lt; ActiveRecord::Base
    acts_as_authorization_subject, :association_name =&gt; :roles
  end

  user.has_role!(:admin)
  user.has_role!(:admin, post)
  user.has_role?(:admin)
  user.has_role?(:admin, post)
  user.has_no_role!(:admin)
  user.has_no_roles!

THE OBJECT

  class Post &lt; ActiveRecord::Base
    acts_as_authorization_object
  end

  post.users # assuming your subject is User

IN CONTROLLER

  class PostController &lt; ApplicationController
    access_control do                                                        
      allow all # allow all roles access to this controller
    end                                                                      
  end

  allow :admin
  allow :all, :except =&gt; [:edit, :delete]</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>