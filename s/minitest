<!DOCTYPE html><html><head><title>$ command line ruby cheat sheets</title><link charset="utf-8" href="/style.css" media="screen" rel="stylesheet" type="text/css" /></head><body><div class="main"><div class="header"><h1><a href="/">cheat sheets.</a></h1><code class="header">$ command line ruby cheat sheets</code></div></div><div class="content"><pre>### test

capture_io
flunk msg = nil
pass  msg = nil
skip  msg = nil, bt = caller

assert             test, msg = nil
assert_block       msg = nil
assert_empty       obj, msg = nil
assert_equal       exp, act, msg = nil
assert_in_delta    exp, act, delta = 0.001, msg = nil
assert_in_epsilon  a, b, epsilon = 0.001, msg = nil
assert_includes    collection, obj, msg = nil
assert_instance_of cls, obj, msg = nil
assert_kind_of     cls, obj, msg = nil
assert_match       exp, act, msg = nil
assert_nil         obj, msg = nil
assert_operator    o1, op, o2, msg = nil
assert_output      stdout = nil, stderr = nil
assert_raises      *exp
assert_respond_to  obj, meth, msg = nil
assert_same        exp, act, msg = nil
assert_send        send_ary, m = nil
assert_silent
assert_throws      sym, msg = nil

refute             test, msg = nil
refute_empty       obj, msg = nil
refute_equal       exp, act, msg = nil
refute_in_delta    exp, act, delta = 0.001, msg = nil
refute_in_epsilon  a, b, epsilon = 0.001, msg = nil
refute_includes    collection, obj, msg = nil
refute_instance_of cls, obj, msg = nil
refute_kind_of     cls, obj, msg = nil
refute_match       exp, act, msg = nil
refute_nil         obj, msg = nil
refute_operator    o1, op, o2, msg = nil
refute_respond_to  obj, meth, msg = nil
refute_same        exp, act, msg = nil

### spec

must_be                -&gt; assert_operator
must_be_close_to       -&gt; assert_in_delta
must_be_empty          -&gt; assert_empty
must_be_instance_of    -&gt; assert_instance_of
must_be_kind_of        -&gt; assert_kind_of
must_be_nil            -&gt; assert_nil
must_be_same_as        -&gt; assert_same
must_be_silent         -&gt; assert_silent
must_be_within_delta   -&gt; assert_in_delta
must_be_within_epsilon -&gt; assert_in_epsilon
must_equal             -&gt; assert_equal
must_include           -&gt; assert_includes
must_match             -&gt; assert_match
must_output            -&gt; assert_output
must_raise             -&gt; assert_raises
must_respond_to        -&gt; assert_respond_to
must_send              -&gt; assert_send
must_throw             -&gt; assert_throws

wont_be                -&gt; refute_operator
wont_be_close_to       -&gt; refute_in_delta
wont_be_empty          -&gt; refute_empty
wont_be_instance_of    -&gt; refute_instance_of
wont_be_kind_of        -&gt; refute_kind_of
wont_be_nil            -&gt; refute_nil
wont_be_same_as        -&gt; refute_same
wont_be_within_delta   -&gt; refute_in_delta
wont_be_within_epsilon -&gt; refute_in_epsilon
wont_equal             -&gt; refute_equal
wont_include           -&gt; refute_includes
wont_match             -&gt; refute_match
wont_respond_to        -&gt; refute_respond_to

### mock

expect(name, retval, args=[])
verify
</pre></div><div class="clear"></div><div class="footer">Powered by <a href="http://www.sinatrarb.com/">Sinatra</a>,
<a href="http://puma.io/">Puma</a> and, to a lesser extent,
<a href="http://errtheblog.com/">Err the Blog</a>.</div></body></html>