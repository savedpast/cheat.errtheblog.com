---
assert_generates: ! "# 'cheat assertions' for the rest\n\nassert_generates(expected_path,
  options, defaults={}, extras = {}, message=nil)\n\nAsserts that the provided options
  can be used to generate the provided path. This is the inverse of assert_recognizes.
  The extras parameter is used to tell the request the names and values of additional
  request parameters that would be in a query string. The message parameter allows
  you to specify a custom error message for assertion failures.\n\nThe defaults parameter
  is unused.\n\nExamples\n\n  # Asserts that the default action is generated for a
  route with no action\n  assert_generates(\"/items\", :controller => \"items\", :action
  => \"index\")\n\n  # Tests that the list action is properly routed\n  assert_generates(\"/items/list\",
  :controller => \"items\", :action => \"list\")\n\n  # Tests the generation of a
  route with a parameter\n  assert_generates(\"/items/list/1\", { :controller => \"items\",
  :action => \"list\", :id => \"1\" })\n\n  # Asserts that the generated route gives
  us our custom route\n  assert_generates \"changesets/12\", { :controller => 'scm',
  :action => 'show_diff', :revision => \"12\" }\n"
