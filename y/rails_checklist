---
rails_checklist: ! "Source [ http://www.matthewpaulmoore.com/articles/1276-ruby-on-rails-code-quality-checklist#custom-finds
  ]\r\n\r\nRuby on Rails Code Quality Checklist\r\n\r\n1. Each controller action only
  calls one model method other than an initial find or new.  \r\n(Make custom .new
  or .update methods in the model with all necessary). \r\n2. Only one or two instance
  variables are shared between each controller and view. \r\n3. All model and variable
  names are both immediately obvious (to a new developer) and as short as possible
  without using abbreviations. \r\n4. A .find or .find_by_ is never called in a view
  or view helper. \r\n5. There is zero custom code that duplicates functionality of
  a built-in function in rails. \r\n6. Code has been aggressively DRYed during development.
  \r\n7. All functionality used in two or more models has been turned into a library/module.
  \r\n8. All logic duplicated between two or more apps has been turned into a gemified
  plugin. \r\n9. STI is not used anywhere \r\n10. Every design choice should yield
  the most simplistic design possible for the need of users at the current time.  \r\nNo
  guesses for future functionality were designed into the application. \r\n11. Close
  to full test coverage exists at the highest level of the application: on and between
  controller actions.  \r\nCoverage is highest for code used by the most number of
  end users. \r\n12. All tests pass before code is merged into a shared repository.
  \r\n13. Every fixed defect on a deployed product has tests added to prevent regression.
  \r\n14. Every plugin installed has been code reviewed."
