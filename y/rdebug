---
rdebug: ! "general Informations and Key shortcuts for Kent Sibilev's great ruby-debug
  gem.\r\nhttp://www.datanoise.com/ruby-debug/, http://rubyforge.org/projects/ruby-debug/\r\n\r\nA
  reference manual for version 0.10.0 is at http://bashdb.sf.net/ruby-debug.html\r\n\r\nInstallation\r\ngem
  install ruby-debug\r\ngem install ruby-debug19 (for 1.9)\r\n\r\nUsage\r\nrdebug
  [options] <script.rb> -- <script.rb parameters>\r\n\r\nstartup settings:\r\nrdebug
  reads its configuration file at startup. \r\ncreate a file ~/.rdebugrc with this
  content:\r\n\r\nset autolist\r\nset autoeval\r\nset autoreload\r\n\r\nafter starting
  rdebug like: rdebug script/server\r\nenter 'c' and 'return' for starting up rdebug
  finally.\r\n\r\nMost important commands:\r\nr[eload], n[ext], c[ont]\r\n\r\n###################################################################\r\nCommands
  (available as 'help <command-name>' in active debug mode)\r\n\r\nbacktrace (alias
  for where)\r\n(rdb:1) bt|backtrace\r\n\r\nbreak\r\n(rdb:1) b[reak] file:line [if
  expr]\r\n(rdb:1) b[reak] class(.|#)method [if expr]\r\n          set breakpoint
  to some position, (optionally) if expr == true\r\n\r\nBefore version 0.10.0:\r\n(rdb:1)
  b[reak]    list breakpoints \r\n0.10.0 or later:\r\n(rdb:1) info b[reak]\r\n\r\ncatch\r\n(rdb:1)
  cat[ch]                 (show catchpoint)\r\n(rdb:1) cat[ch] <an Exception>  (set
  catchpoint to an exception)\r\n\r\ncont\r\n(rdb:1) c[ont][ nnn] (run until program
  ends or hits breakpoint or reaches line nnn)\r\n\r\ndelete\r\n(rdb:1) del[ete][
  nnn] (delete some or all breakpoints)\r\n\r\ndisable\r\n(rdb:1) disable BPT-NUM
  - disable given breakpoint number\r\n\r\ndisplay\r\n(rdb:1) disp[lay] <expression>
  (add expression into display expression list)\r\n(rdb:1) disp[lay]              (display
  expression list)\r\n\r\ndown\r\n(rdb:1) down [count] (move to lower frame)\r\n\r\nenable\r\n(rdb:1)
  enable BPT-NUM - enable given breakpoint number\r\n\r\neval\r\n(rdb:1) e[val] expression
  evaluate expression and print its value, alias for p.\r\n                    * NOTE
  - to turn on autoeval, use 'set autoeval'\r\n\r\nexit\r\n(rdb:1) q[uit]  exit from
  debugger,\r\n(rdb:1) exit    alias to quit\r\n\r\nfinish\r\n(rdb:1) fin[ish] return
  to outer frame\r\n\r\nframe\r\n(rdb:1) f[rame] frame-number\r\n  Move the current
  frame to the specified frame number.\r\n  A negative number indicates position from
  the other end.  \r\n  So 'frame -1' moves to the oldest frame, and 'frame 0' moves
  to\r\n  the newest frame.\r\n\r\nhelp\r\n(rdb:1) h[elp]          print help\r\n(rdb:1)
  h[elp] command  print help on command\r\n\r\nirb\r\n(rdb:1) irb starts an IRB session.
  (EXPERIMENTAL)\r\n\r\nlist\r\n(rdb:1) l[ist]          list forward\r\n(rdb:1) l[ist]
  -        list backward\r\n(rdb:1) l[ist] =        list current line\r\n(rdb:1) l[ist]
  nn-mm    list given lines\r\n\r\nmethod\r\n(rdb:1) m[ethod] i[nstance] <obj>       show
  methods of object\r\n(rdb:1) m[ethod] <class|module>         show instance methods
  of class or module\r\n\r\nnext\r\n(rdb:1) n[ext][+][ nnn] step over once or nnn
  times,\r\n                  '+' forces to move to another line\r\n\r\np\r\n(rdb:1)
  \ p expression    evaluate expression and print its value\r\n\r\npp\r\n(rdb:1) pp
  expression   evaluate expression and pretty-print its value\r\n\r\nps\r\n(rdb: 1)
  ps array - print array in columnized sorted order (e.g. \"ps Kernel.methods\")\r\n\r\nputl\r\n(rdb:
  1) putl array - print array in columnized order\r\n\r\nquit\r\n(rdb:1) q[uit]  exit
  from debugger,\r\n(rdb:1) exit    alias to quit\r\n\r\nreload\r\n(rdb:1) r[eload]
  \       forces source code reloading\r\n\r\nrestart\r\n(rdb:1) restart|R [args]\r\nRestart
  the program. This is is a re-exec - all debugger state\r\nis lost. If command arguments
  are passed those are used.\r\n\r\nsave\r\n(rdb:1) save [FILE]      saves current
  breakpoints and catchpoint as a script file\r\n\r\nBefore 0.10.0:\r\n(rdb:1) script
  FILE     executes a script file\r\nAfter 0.10.0 (to be gdb compatible):\r\n(rdb:1)
  source FILE     executes a script file\r\n\r\nset\r\n(rdb:1) set <setting>\r\nwhere
  <setting>:\r\n  args           - argument list to give program being debugged when
  restarted\r\n  autolist       - execute 'list' command on every breakpoint\r\n  autoeval
  \      - evaluate every unrecognized command\r\n  autoreload     - enables automatic
  source code reloading\r\n  autoirb        - debugger invokes IRB on every stop\r\n
  \ listsize       - number of source lines to list by default\r\n  trace          -
  display stack trace when 'eval' raises exception\r\n  framefullpath  - frame will
  display full file names\r\n  frameclassname - frame will display class names\r\n
  \ forcestep      - make sure 'next/step' commands always move to a new line\r\n
  \ width          - number of characters the debugger thinks are in a line\r\n\r\nTo
  disable setting, use 'no' prefix, like 'noautolist' or \"off\" as in\r\n\"autolist
  off\"\r\n\r\nstep\r\n(rdb:1) s[tep][ nnn]    step (into methods) once or nnn times\r\n\r\nthread\r\n(rdb:1)
  th[read] l[ist]                 list all threads\r\n(rdb:1) th[read] [sw[itch]]
  <nnn>       switch thread context to nnn\r\n(rdb:1) th[read] stop <nnn>             stop
  thread nnn\r\n(rdb:1) th[read] c[ur[rent]]            show current thread\r\n(rdb:1)
  th[read] resume <nnn>           resume thread nnn\r\n\r\ntrace\r\n(rdb:1) tr[ace]
  (on|off)        set trace mode of current thread\r\n(rdb:1) tr[ace] (on|off) all
  \   set trace mode of all threads\r\n\r\nundisplay\r\n(rdb:1) undisp[lay][ nnn]
  \      delete one particular or all display expressions\r\n\r\nup\r\n(rdb:1) up[count]
  \      move to higher frame\r\n\r\nvar\r\n(rdb:1) v[ar] const <object>            show
  constants of object\r\n(rdb:1) v[ar] g[lobal]                  show global variables\r\n(rdb:1)
  v[ar] i[nstance] <object>       show instance variables of object\r\n(rdb:1) v[ar]
  l[ocal]                   show local variables\r\n\r\nBefore 10.0 const can be abbreviated
  \"c\", after 10.0 or later you need\r\n\"co\" because there is also \"var class
  <object>\".\r\n\r\nwhere\r\n(rdb:1) w[here] display frames"
