---
rails_environment: ! "Source: http://glu.ttono.us/articles/2006/05/22/configuring-rails-environments-the-cheat-sheet\n\n=
  General Options =\nFor more detailed documentation, see the source code directly.
  \nEach of these options should be prepended with config. when used with a Rails::Initializer
  do |config| block.\n\nbreakpoint_server\n    Whether or not to use the breakpoint
  server (boolean)\ncache_classes\n    Whether or not classes should be cached (set
  to false if you want application classes to be reloaded on each request)\nconnection_adapters\n
  \   The list of connection adapters to load.\n    By default, all connection adapters
  are loaded. You can set this to be just the adapter(s) you will use to reduce your
  application's load time.\ncontroller_paths\n    The list of paths that should be
  searched for controllers.\n    Defaults to app/controllers and components.\ndatabase_configuration_file\n
  \   The path to the database configuration file to use.\n    Defaults to config/database.yml.\nframeworks\n
  \   The list of rails framework components that should be loaded.\n    Defaults
  to :active_record, :action_controller, :action_view, :action_mailer, and :action_web_service.\nload_paths\n
  \   An array of additional paths to prepend to the load path.\n    By default, all
  app, lib, vendor and mock paths are included in this list.\nlog_level\n    The log
  level to use for the default Rails logger.\n    In production mode, this defaults
  to :info. In development mode, it defaults to :debug.\nlog_path\n    The path to
  the log file to use.\n    Defaults to log/#{environment}.log (e.g. log/development.log
  or log/production.log).\nlogger\n    The specific logger to use.\n    By default,
  a logger will be created and initialized using #log_path and #log_level, but a programmer
  may specifically set the logger to use via this accessor and it will be used directly.\nview_path\n
  \   The root of the application's views.\n    Defaults to app/views.\nwhiny_nils\n
  \   Set to true if you want to be warned (noisily) when you try to invoke any method
  of nil. Set to false for the standard Ruby behavior.\nplugin_paths\n    The path
  to the root of the plugins directory.\n    By default, it is in vendor/plugins.\n\n\n=
  ActiveRecord Options =\nEach of these options should be prepended with config.active_record.
  when used with a Rails::Initializer do |config| block.\n\nprimary_key_prefix_type\n
  \   Accessor for the prefix type that will be prepended to every primary key column
  name. The options are :table_name and :table_name_with_underscore. If the first
  is specified, the Product class will look for “productid” instead of “id” as the
  primary column. If the latter is specified, the Product class will look for “product_id”
  instead of “id”. Remember that this is a global setting for all Active Records.\ntable_name_prefix\n
  \   The string to prepend to every table name.\n    By default, the prefix is an
  empty string\ntable_name_suffix\n    The same as table_name_prefix, but it appends
  the string to the table name.\npluralize_table_names\n    Indicates whether or not
  table names should be the pluralized versions of the corresponding class names.\n
  \   Defaults to true.\ncolorize_logging\n    Should logs have ANSI color codes in
  logging statments?\n    Defaults to true\ndefault_timezone\n    Determines whether
  to use Time.local (using :local) or Time.utc (using :utc) when pulling dates and
  times from the database.\n    Defaults to :local by default.\nallow_concurrency\n
  \   Determines whether or not to use a connection for each thread, or a single shared
  connection for all threads.\n    Defaults to false. Set to true if you're writing
  a threaded application.\ngenerate_read_methods\n    Determines whether to speed
  up access by generating optimized reader methods to avoid expensive calls to method_missing
  when accessing attributes by name. You might want to set this to false in development
  mode, because the methods would be regenerated on each request.\nschema_format\n
  \   Specifies whether to dump the database in ruby or sql. It takes :ruby or :sql
  as options, and defaults to :ruby\n\n\n= ActionController Options =\nEach of these
  options should be prepended with config.action_controller. when used with a Rails::Initializer
  do |config| block.\n\nview_controller_internals\n    Determines whether the view
  has access to controller internals @request, @response, @session, and @template.\nassert_host\n
  \   Prepends all the URL-generating helpers from AssetHelper (eg. image_tag)\nconsider_all_requests_local\n
  \   All requests are considered local by default (true), so everyone will be exposed
  to detailed debugging screens on errors.\n    Defaults to true\ndebug_routes\n    Enable
  or disable the collection of failure information for RoutingErrors.\n    Defaults
  to true.\nallow_concurrency\n    Controls whether the application is thread-safe.\n
  \   Defaults to false.\nparam_parsers\n    Lets you register handlers wich will
  process the http body and add parameters to the @params hash.\n    Defaults to {
  Mime::XML => :xml_simple }\ntemplate_root\n    Sets the default template location.
  For example, a call to render(\"test/template\") will be converted to \"#{template_root}/test/template.rhtml\"\nlogger\n
  \   Can be set to nil for no logging or a logger conforming to the interface of
  Log4r or the default Ruby 1.8+ Logger class.\nignore_missing_templates\n    Turn
  on ignore_missing_templates if you want to unit test actions without making the
  associated templates.\n\n\n= ActionView Options =\nEach of these options should
  be prepended with config.action_view. when used with a Rails::Initializer do |config|
  block.\n\ncache_template_loading\n    Specify whether file modification times should
  be checked to see if a template needs recompilation\ncache_template_extensions\n
  \   Specify whether file extension lookup should be cached. Should be false for
  development environments.\n    Defaults to true.\nlocal_assigns_support_string_keys\n
  \   Specify whether local_assigns should be able to use string keys.\n    Defaults
  to true.\n    String keys are deprecated and will be removed shortly.\ndebug_rjs\n
  \   Specify whether RJS responses should be wrapped in a try/catch block that alert()s
  the caught exception (and then re-raises it).\n    Defaults to false.\nlogger\n
  \   Can be set to nil for no logging or a logger conforming to the interface of
  Log4r or the default Ruby 1.8+ Logger class.\n\n\n= ActionMailer Options =\nEach
  of these options should be prepended with config.action_mailer. when used with a
  Rails::Initializer do |config| block.\n\nserver_settings\n    A hash defining the
  server to be used for email.\n    Defaults to using a server localy on port 25 as
  such:\n\n    { :address        => \"localhost\", \n      :port           => 25,
  \n      :domain         => 'localhost.localdomain', \n      :user_name      => nil,
  \n      :password       => nil, \n      :authentication => nil }\n\nraise_delivery_errors\n
  \   Defaults to true\ndelivery_method\n    Defaults to :smtp\nperform_deliveries\n
  \   Defaults to true\ndefault_charset\n    Defaults to \"utf-8\"\ndefault_content_type\n
  \   Defaults to \"text/plain\"\ndefault_mime_version\n    Defaults to nil\ndefault_implicit_parts_order\n
  \   Defaults to %w[text/html text/enriched text/plain]"
