---
shoulda: ! "Installing\r\n----------\r\n\r\n  As a Rails plugin\r\n  -----------------\r\n\r\n
  \   script/plugin install git://github.com/thoughtbot/shoulda.git\r\n\r\n  As a
  Rails gem\r\n  --------------\r\n\r\n    In config/environment.rb:\r\n      config.gem
  'thoughtbot-shoulda', :lib => 'shoulda/rails', :source => 'http://gems.github.com'\r\n\r\n
  \   Then run:\r\n      rake gems:install gems:unpack\r\n\r\n  As a standalone gem\r\n
  \ -------------------\r\n\r\n    Run:\r\n      sudo gem install thoughtbot-shoulda
  -s http://gems.github.com\r\n\r\n    In your test, or test_helper.rb:\r\n      require
  'shoulda'\r\n\r\n  Using Shoulda with RSpec\r\n  ------------------------\r\n\r\n
  \   $ cheat rspec_shoulda\r\n\r\nAssertions\r\n----------\r\n\r\n  assert_contains
  <array>, <object in array, or regular expression to match>\r\n  assert_does_not_contain
  <array>, <object not in array, or regular expression to not match>\r\n\r\n  assert_same_elements
  <array>, <array with same elements, but different order>\r\n\r\n  assert_bad_value
  <class>, <attribute>, <value that should cause an validation error on attribute>\r\n
  \ assert_good_value <class>, <attribute>, <value that should not cause a validation
  error on attribute>\r\n\r\n  assert_save <object which .save returns true>\r\n  assert_valid
  <object which .valid? returns true> \r\n\r\n  assert_sent_email do |email| \r\n
  \  email.subject =~ /activated/ && email.to.include?('bob@email.com') \r\n  end\r\n
  \ assert_did_not_send_email do |email| \r\n   email.subject =~ /activated/ && email.to.include?('bob@email.com')
  \r\n  end\r\n\r\nBasics\r\n------\r\n\r\n  class FooTest < Test::Unit::TestCase\r\n
  \   context <context description string> do\r\n      setup do\r\n        # ...\r\n
  \     end\r\n\r\n      teardown do\r\n      end\r\n\r\n      should <description
  string> do\r\n      end\r\n\r\n      should_eventually <description string>\r\n
  \     should_eventually <description string> do\r\n        # this code can be broken,
  but won't break the build\r\n      end\r\n    end\r\n\r\n    should <string description>
  do\r\n      # ...\r\n    end\r\n  end\r\n\r\n\r\n\r\nGeneral Macros\r\n--------------\r\n\r\n
  \ should_change \"Post.count\", :from => 0, :to => 1\r\n  should_change \"@post.title\",
  :from => \"old\", :to => \"new\"\r\n  should_change \"@post.title\"\r\n  should_change
  \"@post.title\" :from => \"old\"\r\n  should_change \"@post.title\" :to   => \"new\"\r\n
  \ should_not_change \"Post.count\"\r\n\r\nMacros for class under test\r\n---------------------------\r\n\r\n
  \ should_have_class_methods :find, :destroy\r\n  should_have_instance_methods :email,
  :name, :name=\r\n\r\nActiveRecord Macros\r\n-------------------\r\n\r\n  should_have_db_columns
  :id, :email, :name, :created_at\r\n  should_have_db_column :email, :type => \"string\",
  :default => nil,   :precision\r\n  => nil, :limit    => 255,\r\n                                :null
  => true,     :primary => false, :scale    \r\n                                =>
  nil, :sql_type => 'varchar(255)'\r\n\r\n  should_have_indices :email, :name, [:commentable_type,
  :commentable_id]\r\n  should_have_index :age\r\n\r\n  should_have_named_scope 'recent(5)',
  :limit => 5\r\n  should_have_named_scope 'recent(1)', :limit => 1\r\n\r\n  should_require_acceptance_of
  :eula\r\n\r\n  should_ensure_length_is :ssn, 9\r\n  should_ensure_length_at_least
  :name, 3\r\n  should_ensure_length_in_range :password, (8..40)\r\n  should_ensure_value_in_range
  :age, (0..100)\r\n\r\n  should_only_allow_numeric_values_for :age\r\n\r\n  should_have_readonly_attributes
  :password, :admin_flag\r\n\r\n  should_require_attributes :name, :phone_number\r\n\r\n
  \ should_require_unique_attributes :keyword, :username\r\n  should_require_unique_attributes
  :name, :message => \"O NOES! SOMEONE STOELED\r\n  YER NAME!\"\r\n  should_require_unique_attributes
  :email, :scoped_to => :name\r\n  should_require_unique_attributes :address, :scoped_to
  => [:first_name,\r\n  :last_name]\r\n\r\n  should_protect_attributes :password,
  :admin_flag\r\n\r\n  should_allow_values_for :phone, \"(123) 999-3049\", \"201-0023\"\r\n
  \ should_not_allow_values_for :phone, \"I am totally not a phone number\",\r\n  \"201-0023\"\r\n\r\n
  \ should_belong_to :parent\r\n\r\n  should_have_one :god\r\n\r\n  should_have_many
  :friends\r\n  should_have_many :enemies, :through => :friends\r\n  should_have_many
  :enemies, :dependent => :destroy\r\n\r\n  should_have_and_belong_to_many :posts,
  :cars\r\n\r\nActionController Macros\r\n-----------------------\r\n\r\n  should_assign_to\r\n
  \ should_be_restful\r\n  should_belong_to\r\n  should_filter_params\r\n  should_not_assign_to\r\n
  \ should_not_set_the_flash\r\n  should_redirect_to\r\n  should_render_a_form\r\n
  \ should_render_template\r\n  should_respond_with\r\n  should_respond_with_xml_for\r\n
  \ should_route\r\n  should_set_the_flash_to"
